"""
Class for user for library example

"""

import item_list


class User():
	"""
	User class for creating and managing user of library

	"""

	def __init__(self, id):
		"""
		Initialise a user with ID number and initial fine which will be 0
		:param: id: user ID generated by init and given to user
		"""
		self.user_id = id
		self.fines = 0

	def __del__(self):
		"""
		Clean up the user if they leave library

		:return:
		"""

		# user may be removed so this method will remove that user?
		pass

	def able_to_borrow(self, maxfines, maxallowed):
		"""
		Check whether a user is able to borrow an item

		:param: maxfines: max amount of fines allowed, float
		:param: maxallowed: max amount of items allowed to checkout, int
		:return: boolean
		"""
		# if user has fines > than max fines or num of items > max allowed then can't borrow
		if (item_list.fines_owed() > maxfines) or (item_list.number_of_items() > maxallowed):
			return False
		else:  # can borrow
			return True

	def checkout(self, item):
		"""
		Checkout an item. Calls to libraries item list

		:param item: item object that is to be checked out
		:return:
		"""
		item_list.checkout(item)

	def return_item(self, title):
		"""
		Return item back to library for current user

		:return:
		"""
		item_list.return_item(title)

	def get_id(self):
		"""
		Return user id

		:return: user id
		"""
		return self.user_id
